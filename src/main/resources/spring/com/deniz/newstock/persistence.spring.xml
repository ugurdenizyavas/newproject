<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

    <bean id="framework_daoTemplate" class="com.deniz.framework.persistence.DaoTemplate"
          abstract="true">
        <description>Base spring bean definition that is used as parent for
            all dao beans
        </description>
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <bean id="sessionFactory" class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean"
          parent="framework_AbstractSessionFactory">
        <property name="packagesToScan">
            <list merge="true">
                <!-- Add new packages to scan here -->
            </list>
        </property>
    </bean>

    <bean id="framework_AbstractSessionFactory"
          class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean"
          abstract="true">
        <property name="dataSource" ref="dataSource"/>
        <property name="hibernateProperties">
            <value>${sessionFactory.hibernateProperties}</value>
        </property>
        <property name="packagesToScan">
            <list>
                <value>com/deniz/**/persistence/entity</value>
            </list>
        </property>
    </bean>


    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
          destroy-method="close">
        <property name="driverClassName" value="oracle.jdbc.driver.OracleDriver"/>
        <property name="url" value="${persistence.database.url}"/>
        <property name="username" value="${persistence.database.username}"/>
        <property name="password" value="${persistence.database.password}"/>
        <property name="connectionInitSqls" value="${persistence.database.connectionInitSqls}"/>
        <property name="initialSize" value="${persistence.database.initialSize}"/>
        <property name="maxActive" value="${persistence.database.maxActive}"/>
        <property name="maxIdle" value="${persistence.database.maxIdle}"/>
        <property name="minIdle" value="${persistence.database.minIdle}"/>
        <property name="maxWait" value="${persistence.database.maxWait}"/>

        <property name="validationQuery" value="${persistence.database.validationQuery}"/>
        <property name="testOnBorrow" value="${persistence.database.testOnBorrow}"/>
        <property name="testOnReturn" value="${persistence.database.testOnReturn}"/>
        <property name="testWhileIdle" value="${persistence.database.testWhileIdle}"/>
        <property name="timeBetweenEvictionRunsMillis"
                  value="${persistence.database.timeBetweenEvictionRunsMillis}"/>
        <property name="numTestsPerEvictionRun"
                  value="${persistence.database.numTestsPerEvictionRun}"/>
        <property name="minEvictableIdleTimeMillis"
                  value="${persistence.database.minEvictableIdleTimeMillis}"/>

        <property name="poolPreparedStatements"
                  value="${persistence.database.poolPreparedStatements}"/>
        <property name="maxOpenPreparedStatements"
                  value="${persistence.database.maxOpenPreparedStatements}"/>

        <property name="removeAbandoned" value="${persistence.database.removeAbandoned}"/>
        <property name="removeAbandonedTimeout"
                  value="${persistence.database.removeAbandonedTimeout}"/>
        <property name="logAbandoned" value="${persistence.database.logAbandoned}"/>

    </bean>
</beans>